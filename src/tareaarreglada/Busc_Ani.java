/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tareaarreglada;

import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dashs
 */
public class Busc_Ani extends javax.swing.JFrame {

    /**
     * Creates new form B_Ani
     */
    public Busc_Ani() {
        initComponents();
        jTextField2.setEditable(false);//Haremos que le sea imposible al usuario escribir en este JTextField
        setLocationRelativeTo(null); // Centrar en la pantalla
        setResizable(false); // Desactivar la posibilidad de redimensionar
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Caract = new javax.swing.JTable();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel1.setText("Ingrese animal");

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setText("Cantidad de la misma especie");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Caracteristicas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        Caract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(Caract);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Pondremos una cadena de texto vacia
        jTextField1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombreAnimal = jTextField1.getText();
        int CantidadEspecie = 0;
        String grupo = "";
        CAnimal CA = new CAnimal();
        //Crearemos una cantidad de 11 listas con cada uno de los animales que pueda haber en los grupos.
        List<String> Mamiferos = Arrays.asList("León", "Elefante", "Ballena", "Delfín", "Ratón", "Caballo", "Perro", "Lobo", "Vaca", "Oso", "Conejo", "Gorila", "Chimpancé", "Jirafa", "Hipopótamo", "Canguro", "Rinoceronte", "Oveja", "Cerdo");
        List<String> Peces = Arrays.asList("Alfonsino", "Anchoveta", "Bacalao de profundidad", "Besugo", "Caballa", "Congrio dorado", "Congrio negro", "Jurel", "Lenguado", "Merluza común", "Merluza de cola", "Merluza de tres aletas", "Merluza del sur", "Orange roughy", "Pejegallo", "Pez espada", "Puye", "Raya volantín", "Reineta", "Salmón coho", "Salmón del Atlántico", "Sardina austral", "Sardina común", "Sardina española");
        List<String> Reptiles = Arrays.asList("Tortugas", "Tuátara", "Anfisbenio", "Iguana", "Anolis", "Lagartija", "Chucuala", "Agama", "Dragón de Komodo", "Geco", "Camaleón", "Salamanquesa", "Cocodrilos", "Escinco", "Eslizón", "Teyú", "Lagarto", "Calango verde", "Monstruo de Gila", "Serpientes");
        List<String> Aves = Arrays.asList("Ganso", "Urraca", "Cóndor", "Lechuza", "Golondrina", "Loro", "Koel", "Azulejo", "Secretario", "Garza", "Canario", "Cisne", "Quebrantahuesos", "Frailecillo", "Albatros", "Herrerillo", "Carpintero", "Pavo real", "Martín pescador", "Tucán", "Halcones", "Pinzón", "Cuervo", "Vencejo", "Flamenco", "Chotacabras", "Cárabo", "Guacamaya", "Jilguero", "Pingüino", "Gallina", "Quetzal", "Búho", "Avestruz", "Aguilucho", "Ñandú");
        List<String> Anfibios = Arrays.asList("Sapo común", "Sapo gigante", "Salamandra", "Tritón", "Rana venenosa", "Rana de Nueva Zelanda", "Rana de Seychelles", "Rana arborícola", "Rana flecha azul", "Axolotl o ajolote", "Cecilia", "Pigmeos Salamandra pie plano", "Jalapa tritón falso");
        List<String>Artropodos = Arrays.asList("Insectos","Arácnidos","Miriápodos","Crustáceos");
        List<String> Moluscos = Arrays.asList("Cefalópodos","Bivalvos","Gasterópodos");
        List<String>  Equinodermos  =  Arrays.asList("Estrella_de_mar","Erizo");
        List<String> Gusanos = Arrays.asList("Anélidos","Nematodos","Platelmintos");
        List<String> Poriferos = Arrays.asList("Esponjas");
        List<String> Celentereos = Arrays.asList("Medusas","Pólipos");

        if(!Mamiferos.contains(nombreAnimal)&&!Peces.contains(nombreAnimal)&&!Reptiles.contains(nombreAnimal)&&!Aves.contains(nombreAnimal)&&!Anfibios.contains(nombreAnimal)&&!Artropodos.contains(nombreAnimal)&&!Moluscos.contains(nombreAnimal)&&!Equinodermos.contains(nombreAnimal)&&!Gusanos.contains(nombreAnimal)&&!Poriferos.contains(nombreAnimal)&&!Celentereos.contains(nombreAnimal)){
            JOptionPane.showMessageDialog(null, "Por favor, ingrese correctamente el nombre del animal a buscar.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Se detiene la ejecución si el nombre del animal no está en la lista de mamíferos, peces,reptiles, aves,anfibios,etc.
        }
        if (Mamiferos.contains(nombreAnimal)) {
            try {
                //Mandamos el numero y la opcion animal al metodo BuscadorAnimalTablaOrigen y almacenamos su resultado int en CantidadEspecie
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(1, nombreAnimal);
                grupo = "Mamíferos";//Si entra a este if grupo tomará el valor de Mamíferos
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);//Mandamos a armar una tabla Caract, con el nombre del grupo del animal y su nombre para que se vean sus caracteristicas
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Peces.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(2, nombreAnimal);
                grupo = "Peces";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Reptiles.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(3, nombreAnimal);
                grupo = "Reptiles";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Aves.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(4, nombreAnimal);
                grupo = "Aves";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Anfibios.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(5, nombreAnimal);
                grupo = "Anfibios";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Artropodos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(6, nombreAnimal);
                grupo = "Artrópodos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Moluscos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(7, nombreAnimal);
                grupo = "Moluscos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Equinodermos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(8, nombreAnimal);
                grupo = "Equinodermos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Gusanos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(9, nombreAnimal);
                grupo = "Gusanos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(Poriferos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(10, nombreAnimal);
                grupo = "Poríferos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        if(Celentereos.contains(nombreAnimal)){
            try {
                CantidadEspecie = CA.BuscadorAnimalTablaOrigen(11, nombreAnimal);
                grupo = "Celentéreos";
                CA.MostrarListasAnimalEspecifico(Caract,grupo,nombreAnimal);
            } catch (SQLException ex) {
                Logger.getLogger(Busc_Ani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
              
        jTextField2.setText(""+CantidadEspecie); //En este JTextField mostraremos el resultado obtenido de CantidadEspecie
    }//GEN-LAST:event_jButton1ActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        //Esta es la accion del boton volver hacemos la nueva instancia del Menu y luego le decimos que se haga visible para acto despues usar this.dispose() para cerrar la ventana actual.
        Menu volver = new Menu();
        volver.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Busc_Ani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Busc_Ani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Busc_Ani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Busc_Ani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Busc_Ani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Caract;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
