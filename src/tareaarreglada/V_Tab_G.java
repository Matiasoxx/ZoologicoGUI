/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tareaarreglada;

import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author dashs
 */
public class V_Tab_G extends javax.swing.JFrame {

    /**
     * Creates new form V_Tab_G
     */
    public V_Tab_G() {
        initComponents();
        txtid.setEnabled(false);
        setLocationRelativeTo(null); // Centrar en la pantalla
        setResizable(false); // Desactivar la posibilidad de redimensionar

        
        /*Conexion con = new Conexion();
        con.estableceConexion();*/
        
        CAnimal objAnimales = new CAnimal();
        objAnimales.MostrarAnimales(tbAnimales);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtanimal = new javax.swing.JTextField();
        txttipo = new javax.swing.JTextField();
        txtgrupo = new javax.swing.JTextField();
        guardarb = new javax.swing.JButton();
        modificarb = new javax.swing.JButton();
        eliminarb = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAnimales = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Animales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 2, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("ID");

        jLabel2.setText("Animal");

        jLabel3.setText("Tipo");

        jLabel4.setText("Grupo");

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        txtanimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtanimalActionPerformed(evt);
            }
        });

        txttipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttipoActionPerformed(evt);
            }
        });

        txtgrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgrupoActionPerformed(evt);
            }
        });

        guardarb.setText("Guardar");
        guardarb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarbActionPerformed(evt);
            }
        });

        modificarb.setText("Modificar");
        modificarb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarbActionPerformed(evt);
            }
        });

        eliminarb.setText("Eliminar");
        eliminarb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarbActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(modificarb, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                .addComponent(eliminarb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtid)
                                        .addComponent(txtanimal)
                                        .addComponent(txttipo)
                                        .addComponent(txtgrupo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guardarb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtanimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txttipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtgrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(modificarb)
                .addGap(18, 18, 18)
                .addComponent(eliminarb)
                .addGap(18, 18, 18)
                .addComponent(guardarb)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Animales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 2, 14))); // NOI18N

        tbAnimales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbAnimales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAnimalesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAnimales);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void txttipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttipoActionPerformed

    private void txtgrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgrupoActionPerformed

    private void guardarbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarbActionPerformed
        CAnimal obanimal = new CAnimal();//se crea una instancia para llamar a CAnimal
        String tipo = txttipo.getText().trim();//se obtiene el el tipo  en la variable tipo
        String animal = txtanimal.getText().toString();//se obtiene el el nombre del animal  en la variable animal
        List<String> AnimalesExistentes = Arrays.asList("León", "Elefante", "Ballena", "Delfín", "Ratón", "Caballo", "Perro", "Lobo", "Vaca", "Oso", "Conejo", "Gorila", "Chimpancé", "Jirafa", "Hipopótamo", "Canguro", "Rinoceronte", "Oveja", "Cerdo","Alfonsino", "Anchoveta", "Bacalao de profundidad", "Besugo", "Caballa", "Congrio dorado", "Congrio negro", "Jurel", "Lenguado", "Merluza común", "Merluza de cola", "Merluza de tres aletas", "Merluza del sur", "Orange roughy", "Pejegallo", "Pez espada", "Puye", "Raya volantín", "Reineta", "Salmón coho", "Salmón del Atlántico", "Sardina austral", "Sardina común", "Sardina española","Tortugas", "Tuátara", "Anfisbenio", "Iguana", "Anolis", "Lagartija", "Chucuala", "Agama", "Dragón de Komodo", "Geco", "Camaleón", "Salamanquesa", "Cocodrilos", "Escinco", "Eslizón", "Teyú", "Lagarto", "Calango verde", "Monstruo de Gila", "Serpientes","Ganso", "Urraca", "Cóndor", "Lechuza", "Golondrina", "Loro", "Koel", "Azulejo", "Secretario", "Garza", "Canario", "Cisne", "Quebrantahuesos", "Frailecillo", "Albatros", "Herrerillo", "Carpintero", "Pavo real", "Martín pescador", "Tucán", "Halcones", "Pinzón", "Cuervo", "Vencejo", "Flamenco", "Chotacabras", "Cárabo", "Guacamaya", "Jilguero", "Pingüino", "Gallina", "Quetzal", "Búho", "Avestruz", "Aguilucho", "Ñandú","Sapo común", "Sapo gigante", "Salamandra", "Tritón", "Rana venenosa", "Rana de Nueva Zelanda", "Rana de Seychelles", "Rana arborícola", "Rana flecha azul", "Axolotl o ajolote", "Cecilia", "Pigmeos Salamandra pie plano", "Jalapa tritón falso","Insectos","Arácnidos","Miriápodos","Crustáceos", "Cefalópodos","Bivalvos","Gasterópodos","Estrella_de_mar","Erizo","Anélidos","Nematodos","Platelmintos","Esponjas", "Medusas","Pólipos");
        if(AnimalesExistentes.contains(animal)){ //si el nombre esta repetido significa que el animal ya esta ingresado por lo que no se debe dejar al usuario gurdarlo ya que ya existe dentro de la base de datos
            JOptionPane.showMessageDialog(this, "Por favor,ingrese el nombre de un animal que no exista en el zoologico.");
            return;
        }
        if (tipo.equalsIgnoreCase("vertebrado")) {//si el tipo es vertebrado entrara en este if 
            String tipogrupos = txtgrupo.getText().trim();
            if (tipogrupos.equalsIgnoreCase("Mamíferos") ||//si el grupo pertenece a vertebrados se llamara a la funcion insertar animal y a mostrar animal
                    tipogrupos.equalsIgnoreCase("Aves") ||
                    tipogrupos.equalsIgnoreCase("Peces") ||
                    tipogrupos.equalsIgnoreCase("Anfibios") ||
                    tipogrupos.equalsIgnoreCase("Reptiles")) {
                obanimal.InsertarAnimal(txtanimal, txttipo, txtgrupo);//se ingresan el animal
                obanimal.MostrarAnimales(tbAnimales);//se actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(this, "Tipo de grupo no válido para Vertebrados. Por favor, seleccione entre: Mamíferos, Aves, Peces, Anfibios, Reptiles.");
            }
        } else if (tipo.equalsIgnoreCase("invertebrado")) {//si el tipo es invertebrado entrara en este if 
            String tipogrupos = txtgrupo.getText().trim();
            if (tipogrupos.equalsIgnoreCase("Artrópodos") ||//si el grupo pertenece a invertebrados se llamara a la funcion insertar animal y a mostrar animal
                    tipogrupos.equalsIgnoreCase("Moluscos") ||
                    tipogrupos.equalsIgnoreCase("Equinodermos") ||
                    tipogrupos.equalsIgnoreCase("Gusanos") ||
                    tipogrupos.equalsIgnoreCase("Poríferos") ||
                    tipogrupos.equalsIgnoreCase("Celentéreos")) {
                obanimal.InsertarAnimal(txtanimal, txttipo, txtgrupo);
                obanimal.MostrarAnimales(tbAnimales);
            } else {
                JOptionPane.showMessageDialog(this, "Tipo de grupo no válido para Invertebrados. Por favor, seleccione entre: Artropodos, Moluscos, Equinodermos, Gusanos, Poríferos, Celentéreos.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tipo de animal no válido. Por favor, ingrese 'Vertebrado' o 'Invertebrado'.");
        }
    }//GEN-LAST:event_guardarbActionPerformed

    private void tbAnimalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAnimalesMouseClicked
        CAnimal obmod = new CAnimal();//se crea la instancia para llamar a Canimales
        obmod.SeleccionarAnimal(tbAnimales, txtid,txtanimal, txttipo, txtgrupo);//se llama a la funcion seleccionar animal que nos permite obtenero los datos de la tabla al clickiar

    }//GEN-LAST:event_tbAnimalesMouseClicked

    private void modificarbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarbActionPerformed
        CAnimal obmod = new CAnimal();
        String tipo = txttipo.getText().trim();

        if (tipo.equalsIgnoreCase("vertebrado")) {//si el tipo es vertebrado entrara en este if 
            String tipogrupos = txtgrupo.getText().trim();
            if (tipogrupos.equalsIgnoreCase("Mamíferos")
                    || tipogrupos.equalsIgnoreCase("Aves")
                    ||tipogrupos.equalsIgnoreCase("Peces") 
                    ||tipogrupos.equalsIgnoreCase("Anfibios")
                    ||tipogrupos.equalsIgnoreCase("Reptiles")) {
                obmod.ModificarAnimales(txtid, txtanimal, txttipo, txtgrupo);//se modifica el animal
                obmod.MostrarAnimales(tbAnimales);//se actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(this, "Tipo de grupo no válido para Vertebrados. Por favor, seleccione entre: Mamíferos, Aves, Peces, Anfibios, Reptiles.");
            }
        } else if (tipo.equalsIgnoreCase("invertebrado")) {//si el tipo es invertebrado entrara en este if 
            String tipogrupos = txtgrupo.getText().trim();
            if (tipogrupos.equalsIgnoreCase("Artrópodos")|| //si el grupo pertenece a invertebrados se llamara a la funcion insertar animal y a mostrar animal
                    tipogrupos.equalsIgnoreCase("Moluscos") ||
                    tipogrupos.equalsIgnoreCase("Equinodermos") ||
                    tipogrupos.equalsIgnoreCase("Gusanos") ||
                    tipogrupos.equalsIgnoreCase("Poríferos") ||
                    tipogrupos.equalsIgnoreCase("Celentéreos")) {
                obmod.ModificarAnimales(txtid, txtanimal, txttipo, txtgrupo);//se ingresan el animal
                obmod.MostrarAnimales(tbAnimales);//se actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(this, "Tipo de grupo no válido para Invertebrados. Por favor, seleccione entre: Artropodos, Moluscos, Equinodermos, Gusanos, Poríferos, Celentéreos.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tipo de animal no válido. Por favor, ingrese 'Vertebrado' o 'Invertebrado'.");
        }
    }//GEN-LAST:event_modificarbActionPerformed

    private void eliminarbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarbActionPerformed
        CAnimal obmod = new CAnimal();//se crea instancia para llamar a CAnimales
        obmod.EliminarAnimal(txtid);//se llama a la funcion para eliminar animal
        obmod.MostrarAnimales(tbAnimales);//se llama a la funcion para actualizar la tabla
    }//GEN-LAST:event_eliminarbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //
        txtid.setText("");
        txtanimal.setText("");
        txttipo.setText("");
        txtgrupo.setText("");
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Menu volver = new Menu();
        volver.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtanimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtanimalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtanimalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_Tab_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_Tab_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_Tab_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_Tab_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new V_Tab_G().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarb;
    private javax.swing.JButton guardarb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarb;
    private javax.swing.JTable tbAnimales;
    private javax.swing.JTextField txtanimal;
    private javax.swing.JTextField txtgrupo;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txttipo;
    // End of variables declaration//GEN-END:variables
}
